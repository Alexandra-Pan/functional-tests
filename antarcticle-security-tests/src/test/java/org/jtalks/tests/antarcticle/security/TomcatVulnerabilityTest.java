package org.jtalks.tests.antarcticle.security;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.testng.annotations.*;

import java.io.IOException;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;

/**
 * These tests check directory traversal vulnerability CVE-2007-0450
 * @see <a href="http://www.cvedetails.com/cve/CVE-2007-0450/">CVE-2007-0450</a>
 *
 * @author Andrey Pogorelov
 */
public class TomcatVulnerabilityTest {

    private HttpClient client;
    private String appUrl;

    @BeforeClass
    @Parameters({"appUrl"})
    public void init(String appUrl) throws Exception {
        this.appUrl = appUrl;
        client = new DefaultHttpClient();
    }

    @Test
    public void requestForManagerAppShouldReturnNotFound() throws IOException {
        HttpGet request = new HttpGet(appUrl + "%2F%5C..%2Fmanager%2Fhtml");
        HttpResponse response = client.execute(request);

        int result = response.getStatusLine().getStatusCode();
        response.getEntity().getContent().close();
        assertEquals(result, 404 , "No one should have access to manager app");
    }

    @Test
    public void requestWithEncodedSlashesAndBackslahesForDirectoryShouldFail() throws IOException {
        HttpGet request = new HttpGet(appUrl + "%2F%5c..%2F..%2Fetc%2Fpasswd");
        HttpResponse response = client.execute(request);

        int result = response.getStatusLine().getStatusCode();
        response.getEntity().getContent().close();
        assertTrue(result == 404 || result == 400, "No one should have access to directory in file system");
    }

    @Test
    public void requestWithEncodedSlashesAndBackslashesForSomeFileShouldReturnNotFound() throws IOException {
        HttpGet request = new HttpGet(appUrl + "%2F%5c..%2Fetc%2Fpasswd");
        HttpResponse response = client.execute(request);

        int result = response.getStatusLine().getStatusCode();
        response.getEntity().getContent().close();
        assertEquals(result, 404 , "No one should have access to file in file system");
    }

    @Test
    public void requestWithEncodedSlashesForSomeFileShouldFail() throws IOException {
        HttpGet request = new HttpGet(appUrl + "%2F..%2Fetc%2Fpasswd");
        HttpResponse response = client.execute(request);
        int result = response.getStatusLine().getStatusCode();
        response.getEntity().getContent().close();
        assertTrue(result == 404 || result == 400, "No one should have access to file in file system");
    }
}
